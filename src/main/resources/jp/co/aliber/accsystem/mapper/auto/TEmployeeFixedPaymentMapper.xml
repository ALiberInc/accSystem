<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jp.co.aliber.accsystem.mapper.auto.TEmployeeFixedPaymentMapper">
  <resultMap id="BaseResultMap" type="jp.co.aliber.accsystem.entity.auto.TEmployeeFixedPayment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="employee_id" jdbcType="INTEGER" property="employeeId" />
    <id column="comp_id" jdbcType="INTEGER" property="compId" />
    <result column="basic_salary" jdbcType="INTEGER" property="basicSalary" />
    <result column="position_allowance" jdbcType="INTEGER" property="positionAllowance" />
    <result column="qualification_allowance" jdbcType="INTEGER" property="qualificationAllowance" />
    <result column="house_allowance" jdbcType="INTEGER" property="houseAllowance" />
    <result column="family_allowance" jdbcType="INTEGER" property="familyAllowance" />
    <result column="other_allowance" jdbcType="INTEGER" property="otherAllowance" />
    <result column="transport_fee" jdbcType="INTEGER" property="transportFee" />
    <result column="delete_flg" jdbcType="BIT" property="deleteFlg" />
    <result column="regist_date" jdbcType="TIMESTAMP" property="registDate" />
    <result column="regist_id" jdbcType="INTEGER" property="registId" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="update_id" jdbcType="INTEGER" property="updateId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    employee_id, comp_id, basic_salary, position_allowance, qualification_allowance, 
    house_allowance, family_allowance, other_allowance, transport_fee, delete_flg, regist_date, 
    regist_id, update_date, update_id
  </sql>
  <select id="selectByExample" parameterType="jp.co.aliber.accsystem.entity.auto.TEmployeeFixedPaymentExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from public.t_employee_fixed_payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from public.t_employee_fixed_payment
    where employee_id = #{employeeId,jdbcType=INTEGER}
      and comp_id = #{compId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from public.t_employee_fixed_payment
    where employee_id = #{employeeId,jdbcType=INTEGER}
      and comp_id = #{compId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="jp.co.aliber.accsystem.entity.auto.TEmployeeFixedPaymentExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from public.t_employee_fixed_payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="jp.co.aliber.accsystem.entity.auto.TEmployeeFixedPayment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into public.t_employee_fixed_payment (employee_id, comp_id, basic_salary, 
      position_allowance, qualification_allowance, 
      house_allowance, family_allowance, other_allowance, 
      transport_fee, delete_flg, regist_date, 
      regist_id, update_date, update_id
      )
    values (#{employeeId,jdbcType=INTEGER}, #{compId,jdbcType=INTEGER}, #{basicSalary,jdbcType=INTEGER}, 
      #{positionAllowance,jdbcType=INTEGER}, #{qualificationAllowance,jdbcType=INTEGER}, 
      #{houseAllowance,jdbcType=INTEGER}, #{familyAllowance,jdbcType=INTEGER}, #{otherAllowance,jdbcType=INTEGER}, 
      #{transportFee,jdbcType=INTEGER}, #{deleteFlg,jdbcType=BIT}, #{registDate,jdbcType=TIMESTAMP}, 
      #{registId,jdbcType=INTEGER}, #{updateDate,jdbcType=TIMESTAMP}, #{updateId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="jp.co.aliber.accsystem.entity.auto.TEmployeeFixedPayment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into public.t_employee_fixed_payment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="compId != null">
        comp_id,
      </if>
      <if test="basicSalary != null">
        basic_salary,
      </if>
      <if test="positionAllowance != null">
        position_allowance,
      </if>
      <if test="qualificationAllowance != null">
        qualification_allowance,
      </if>
      <if test="houseAllowance != null">
        house_allowance,
      </if>
      <if test="familyAllowance != null">
        family_allowance,
      </if>
      <if test="otherAllowance != null">
        other_allowance,
      </if>
      <if test="transportFee != null">
        transport_fee,
      </if>
      <if test="deleteFlg != null">
        delete_flg,
      </if>
      <if test="registDate != null">
        regist_date,
      </if>
      <if test="registId != null">
        regist_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="updateId != null">
        update_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="employeeId != null">
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="basicSalary != null">
        #{basicSalary,jdbcType=INTEGER},
      </if>
      <if test="positionAllowance != null">
        #{positionAllowance,jdbcType=INTEGER},
      </if>
      <if test="qualificationAllowance != null">
        #{qualificationAllowance,jdbcType=INTEGER},
      </if>
      <if test="houseAllowance != null">
        #{houseAllowance,jdbcType=INTEGER},
      </if>
      <if test="familyAllowance != null">
        #{familyAllowance,jdbcType=INTEGER},
      </if>
      <if test="otherAllowance != null">
        #{otherAllowance,jdbcType=INTEGER},
      </if>
      <if test="transportFee != null">
        #{transportFee,jdbcType=INTEGER},
      </if>
      <if test="deleteFlg != null">
        #{deleteFlg,jdbcType=BIT},
      </if>
      <if test="registDate != null">
        #{registDate,jdbcType=TIMESTAMP},
      </if>
      <if test="registId != null">
        #{registId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        #{updateId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="jp.co.aliber.accsystem.entity.auto.TEmployeeFixedPaymentExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from public.t_employee_fixed_payment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update public.t_employee_fixed_payment
    <set>
      <if test="record.employeeId != null">
        employee_id = #{record.employeeId,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        comp_id = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.basicSalary != null">
        basic_salary = #{record.basicSalary,jdbcType=INTEGER},
      </if>
      <if test="record.positionAllowance != null">
        position_allowance = #{record.positionAllowance,jdbcType=INTEGER},
      </if>
      <if test="record.qualificationAllowance != null">
        qualification_allowance = #{record.qualificationAllowance,jdbcType=INTEGER},
      </if>
      <if test="record.houseAllowance != null">
        house_allowance = #{record.houseAllowance,jdbcType=INTEGER},
      </if>
      <if test="record.familyAllowance != null">
        family_allowance = #{record.familyAllowance,jdbcType=INTEGER},
      </if>
      <if test="record.otherAllowance != null">
        other_allowance = #{record.otherAllowance,jdbcType=INTEGER},
      </if>
      <if test="record.transportFee != null">
        transport_fee = #{record.transportFee,jdbcType=INTEGER},
      </if>
      <if test="record.deleteFlg != null">
        delete_flg = #{record.deleteFlg,jdbcType=BIT},
      </if>
      <if test="record.registDate != null">
        regist_date = #{record.registDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.registId != null">
        regist_id = #{record.registId,jdbcType=INTEGER},
      </if>
      <if test="record.updateDate != null">
        update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateId != null">
        update_id = #{record.updateId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update public.t_employee_fixed_payment
    set employee_id = #{record.employeeId,jdbcType=INTEGER},
      comp_id = #{record.compId,jdbcType=INTEGER},
      basic_salary = #{record.basicSalary,jdbcType=INTEGER},
      position_allowance = #{record.positionAllowance,jdbcType=INTEGER},
      qualification_allowance = #{record.qualificationAllowance,jdbcType=INTEGER},
      house_allowance = #{record.houseAllowance,jdbcType=INTEGER},
      family_allowance = #{record.familyAllowance,jdbcType=INTEGER},
      other_allowance = #{record.otherAllowance,jdbcType=INTEGER},
      transport_fee = #{record.transportFee,jdbcType=INTEGER},
      delete_flg = #{record.deleteFlg,jdbcType=BIT},
      regist_date = #{record.registDate,jdbcType=TIMESTAMP},
      regist_id = #{record.registId,jdbcType=INTEGER},
      update_date = #{record.updateDate,jdbcType=TIMESTAMP},
      update_id = #{record.updateId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="jp.co.aliber.accsystem.entity.auto.TEmployeeFixedPayment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update public.t_employee_fixed_payment
    <set>
      <if test="basicSalary != null">
        basic_salary = #{basicSalary,jdbcType=INTEGER},
      </if>
      <if test="positionAllowance != null">
        position_allowance = #{positionAllowance,jdbcType=INTEGER},
      </if>
      <if test="qualificationAllowance != null">
        qualification_allowance = #{qualificationAllowance,jdbcType=INTEGER},
      </if>
      <if test="houseAllowance != null">
        house_allowance = #{houseAllowance,jdbcType=INTEGER},
      </if>
      <if test="familyAllowance != null">
        family_allowance = #{familyAllowance,jdbcType=INTEGER},
      </if>
      <if test="otherAllowance != null">
        other_allowance = #{otherAllowance,jdbcType=INTEGER},
      </if>
      <if test="transportFee != null">
        transport_fee = #{transportFee,jdbcType=INTEGER},
      </if>
      <if test="deleteFlg != null">
        delete_flg = #{deleteFlg,jdbcType=BIT},
      </if>
      <if test="registDate != null">
        regist_date = #{registDate,jdbcType=TIMESTAMP},
      </if>
      <if test="registId != null">
        regist_id = #{registId,jdbcType=INTEGER},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateId != null">
        update_id = #{updateId,jdbcType=INTEGER},
      </if>
    </set>
    where employee_id = #{employeeId,jdbcType=INTEGER}
      and comp_id = #{compId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="jp.co.aliber.accsystem.entity.auto.TEmployeeFixedPayment">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update public.t_employee_fixed_payment
    set basic_salary = #{basicSalary,jdbcType=INTEGER},
      position_allowance = #{positionAllowance,jdbcType=INTEGER},
      qualification_allowance = #{qualificationAllowance,jdbcType=INTEGER},
      house_allowance = #{houseAllowance,jdbcType=INTEGER},
      family_allowance = #{familyAllowance,jdbcType=INTEGER},
      other_allowance = #{otherAllowance,jdbcType=INTEGER},
      transport_fee = #{transportFee,jdbcType=INTEGER},
      delete_flg = #{deleteFlg,jdbcType=BIT},
      regist_date = #{registDate,jdbcType=TIMESTAMP},
      regist_id = #{registId,jdbcType=INTEGER},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      update_id = #{updateId,jdbcType=INTEGER}
    where employee_id = #{employeeId,jdbcType=INTEGER}
      and comp_id = #{compId,jdbcType=INTEGER}
  </update>
</mapper>