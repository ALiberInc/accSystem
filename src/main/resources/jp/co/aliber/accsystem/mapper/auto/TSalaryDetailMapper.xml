<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jp.co.aliber.accsystem.mapper.auto.TSalaryDetailMapper">
  <resultMap id="BaseResultMap" type="jp.co.aliber.accsystem.entity.auto.TSalaryDetail">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="employee_id" jdbcType="INTEGER" property="employeeId" />
    <id column="comp_id" jdbcType="INTEGER" property="compId" />
    <id column="salary_year_month" jdbcType="CHAR" property="salaryYearMonth" />
    <result column="pay_date" jdbcType="DATE" property="payDate" />
    <result column="basic_salary" jdbcType="INTEGER" property="basicSalary" />
    <result column="position_allowance" jdbcType="INTEGER" property="positionAllowance" />
    <result column="qualification_allowance" jdbcType="INTEGER" property="qualificationAllowance" />
    <result column="house_allowance" jdbcType="INTEGER" property="houseAllowance" />
    <result column="family_allowance" jdbcType="INTEGER" property="familyAllowance" />
    <result column="other_allowance" jdbcType="INTEGER" property="otherAllowance" />
    <result column="transport_fee" jdbcType="INTEGER" property="transportFee" />
    <result column="total_pay" jdbcType="INTEGER" property="totalPay" />
    <result column="health_insurance" jdbcType="INTEGER" property="healthInsurance" />
    <result column="welfare_insurance" jdbcType="INTEGER" property="welfareInsurance" />
    <result column="employ_insurance" jdbcType="INTEGER" property="employInsurance" />
    <result column="total_insurance" jdbcType="INTEGER" property="totalInsurance" />
    <result column="income_tax" jdbcType="INTEGER" property="incomeTax" />
    <result column="living_tax" jdbcType="INTEGER" property="livingTax" />
    <result column="travel_fund" jdbcType="INTEGER" property="travelFund" />
    <result column="repayment_borrowings" jdbcType="INTEGER" property="repaymentBorrowings" />
    <result column="yearend_deduction" jdbcType="INTEGER" property="yearendDeduction" />
    <result column="rent_deduction" jdbcType="INTEGER" property="rentDeduction" />
    <result column="other_deduction" jdbcType="INTEGER" property="otherDeduction" />
    <result column="total_deductible_amount" jdbcType="INTEGER" property="totalDeductibleAmount" />
    <result column="subscription_amount" jdbcType="INTEGER" property="subscriptionAmount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    employee_id, comp_id, salary_year_month, pay_date, basic_salary, position_allowance, 
    qualification_allowance, house_allowance, family_allowance, other_allowance, transport_fee, 
    total_pay, health_insurance, welfare_insurance, employ_insurance, total_insurance, 
    income_tax, living_tax, travel_fund, repayment_borrowings, yearend_deduction, rent_deduction, 
    other_deduction, total_deductible_amount, subscription_amount
  </sql>
  <select id="selectByExample" parameterType="jp.co.aliber.accsystem.entity.auto.TSalaryDetailExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from public.t_salary_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from public.t_salary_detail
    where employee_id = #{employeeId,jdbcType=INTEGER}
      and comp_id = #{compId,jdbcType=INTEGER}
      and salary_year_month = #{salaryYearMonth,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from public.t_salary_detail
    where employee_id = #{employeeId,jdbcType=INTEGER}
      and comp_id = #{compId,jdbcType=INTEGER}
      and salary_year_month = #{salaryYearMonth,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="jp.co.aliber.accsystem.entity.auto.TSalaryDetailExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from public.t_salary_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="jp.co.aliber.accsystem.entity.auto.TSalaryDetail">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into public.t_salary_detail (employee_id, comp_id, salary_year_month, 
      pay_date, basic_salary, position_allowance, 
      qualification_allowance, house_allowance, 
      family_allowance, other_allowance, transport_fee, 
      total_pay, health_insurance, welfare_insurance, 
      employ_insurance, total_insurance, income_tax, 
      living_tax, travel_fund, repayment_borrowings, 
      yearend_deduction, rent_deduction, other_deduction, 
      total_deductible_amount, subscription_amount
      )
    values (#{employeeId,jdbcType=INTEGER}, #{compId,jdbcType=INTEGER}, #{salaryYearMonth,jdbcType=CHAR}, 
      #{payDate,jdbcType=DATE}, #{basicSalary,jdbcType=INTEGER}, #{positionAllowance,jdbcType=INTEGER}, 
      #{qualificationAllowance,jdbcType=INTEGER}, #{houseAllowance,jdbcType=INTEGER}, 
      #{familyAllowance,jdbcType=INTEGER}, #{otherAllowance,jdbcType=INTEGER}, #{transportFee,jdbcType=INTEGER}, 
      #{totalPay,jdbcType=INTEGER}, #{healthInsurance,jdbcType=INTEGER}, #{welfareInsurance,jdbcType=INTEGER}, 
      #{employInsurance,jdbcType=INTEGER}, #{totalInsurance,jdbcType=INTEGER}, #{incomeTax,jdbcType=INTEGER}, 
      #{livingTax,jdbcType=INTEGER}, #{travelFund,jdbcType=INTEGER}, #{repaymentBorrowings,jdbcType=INTEGER}, 
      #{yearendDeduction,jdbcType=INTEGER}, #{rentDeduction,jdbcType=INTEGER}, #{otherDeduction,jdbcType=INTEGER}, 
      #{totalDeductibleAmount,jdbcType=INTEGER}, #{subscriptionAmount,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="jp.co.aliber.accsystem.entity.auto.TSalaryDetail">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into public.t_salary_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="compId != null">
        comp_id,
      </if>
      <if test="salaryYearMonth != null">
        salary_year_month,
      </if>
      <if test="payDate != null">
        pay_date,
      </if>
      <if test="basicSalary != null">
        basic_salary,
      </if>
      <if test="positionAllowance != null">
        position_allowance,
      </if>
      <if test="qualificationAllowance != null">
        qualification_allowance,
      </if>
      <if test="houseAllowance != null">
        house_allowance,
      </if>
      <if test="familyAllowance != null">
        family_allowance,
      </if>
      <if test="otherAllowance != null">
        other_allowance,
      </if>
      <if test="transportFee != null">
        transport_fee,
      </if>
      <if test="totalPay != null">
        total_pay,
      </if>
      <if test="healthInsurance != null">
        health_insurance,
      </if>
      <if test="welfareInsurance != null">
        welfare_insurance,
      </if>
      <if test="employInsurance != null">
        employ_insurance,
      </if>
      <if test="totalInsurance != null">
        total_insurance,
      </if>
      <if test="incomeTax != null">
        income_tax,
      </if>
      <if test="livingTax != null">
        living_tax,
      </if>
      <if test="travelFund != null">
        travel_fund,
      </if>
      <if test="repaymentBorrowings != null">
        repayment_borrowings,
      </if>
      <if test="yearendDeduction != null">
        yearend_deduction,
      </if>
      <if test="rentDeduction != null">
        rent_deduction,
      </if>
      <if test="otherDeduction != null">
        other_deduction,
      </if>
      <if test="totalDeductibleAmount != null">
        total_deductible_amount,
      </if>
      <if test="subscriptionAmount != null">
        subscription_amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="employeeId != null">
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="compId != null">
        #{compId,jdbcType=INTEGER},
      </if>
      <if test="salaryYearMonth != null">
        #{salaryYearMonth,jdbcType=CHAR},
      </if>
      <if test="payDate != null">
        #{payDate,jdbcType=DATE},
      </if>
      <if test="basicSalary != null">
        #{basicSalary,jdbcType=INTEGER},
      </if>
      <if test="positionAllowance != null">
        #{positionAllowance,jdbcType=INTEGER},
      </if>
      <if test="qualificationAllowance != null">
        #{qualificationAllowance,jdbcType=INTEGER},
      </if>
      <if test="houseAllowance != null">
        #{houseAllowance,jdbcType=INTEGER},
      </if>
      <if test="familyAllowance != null">
        #{familyAllowance,jdbcType=INTEGER},
      </if>
      <if test="otherAllowance != null">
        #{otherAllowance,jdbcType=INTEGER},
      </if>
      <if test="transportFee != null">
        #{transportFee,jdbcType=INTEGER},
      </if>
      <if test="totalPay != null">
        #{totalPay,jdbcType=INTEGER},
      </if>
      <if test="healthInsurance != null">
        #{healthInsurance,jdbcType=INTEGER},
      </if>
      <if test="welfareInsurance != null">
        #{welfareInsurance,jdbcType=INTEGER},
      </if>
      <if test="employInsurance != null">
        #{employInsurance,jdbcType=INTEGER},
      </if>
      <if test="totalInsurance != null">
        #{totalInsurance,jdbcType=INTEGER},
      </if>
      <if test="incomeTax != null">
        #{incomeTax,jdbcType=INTEGER},
      </if>
      <if test="livingTax != null">
        #{livingTax,jdbcType=INTEGER},
      </if>
      <if test="travelFund != null">
        #{travelFund,jdbcType=INTEGER},
      </if>
      <if test="repaymentBorrowings != null">
        #{repaymentBorrowings,jdbcType=INTEGER},
      </if>
      <if test="yearendDeduction != null">
        #{yearendDeduction,jdbcType=INTEGER},
      </if>
      <if test="rentDeduction != null">
        #{rentDeduction,jdbcType=INTEGER},
      </if>
      <if test="otherDeduction != null">
        #{otherDeduction,jdbcType=INTEGER},
      </if>
      <if test="totalDeductibleAmount != null">
        #{totalDeductibleAmount,jdbcType=INTEGER},
      </if>
      <if test="subscriptionAmount != null">
        #{subscriptionAmount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="jp.co.aliber.accsystem.entity.auto.TSalaryDetailExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from public.t_salary_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update public.t_salary_detail
    <set>
      <if test="record.employeeId != null">
        employee_id = #{record.employeeId,jdbcType=INTEGER},
      </if>
      <if test="record.compId != null">
        comp_id = #{record.compId,jdbcType=INTEGER},
      </if>
      <if test="record.salaryYearMonth != null">
        salary_year_month = #{record.salaryYearMonth,jdbcType=CHAR},
      </if>
      <if test="record.payDate != null">
        pay_date = #{record.payDate,jdbcType=DATE},
      </if>
      <if test="record.basicSalary != null">
        basic_salary = #{record.basicSalary,jdbcType=INTEGER},
      </if>
      <if test="record.positionAllowance != null">
        position_allowance = #{record.positionAllowance,jdbcType=INTEGER},
      </if>
      <if test="record.qualificationAllowance != null">
        qualification_allowance = #{record.qualificationAllowance,jdbcType=INTEGER},
      </if>
      <if test="record.houseAllowance != null">
        house_allowance = #{record.houseAllowance,jdbcType=INTEGER},
      </if>
      <if test="record.familyAllowance != null">
        family_allowance = #{record.familyAllowance,jdbcType=INTEGER},
      </if>
      <if test="record.otherAllowance != null">
        other_allowance = #{record.otherAllowance,jdbcType=INTEGER},
      </if>
      <if test="record.transportFee != null">
        transport_fee = #{record.transportFee,jdbcType=INTEGER},
      </if>
      <if test="record.totalPay != null">
        total_pay = #{record.totalPay,jdbcType=INTEGER},
      </if>
      <if test="record.healthInsurance != null">
        health_insurance = #{record.healthInsurance,jdbcType=INTEGER},
      </if>
      <if test="record.welfareInsurance != null">
        welfare_insurance = #{record.welfareInsurance,jdbcType=INTEGER},
      </if>
      <if test="record.employInsurance != null">
        employ_insurance = #{record.employInsurance,jdbcType=INTEGER},
      </if>
      <if test="record.totalInsurance != null">
        total_insurance = #{record.totalInsurance,jdbcType=INTEGER},
      </if>
      <if test="record.incomeTax != null">
        income_tax = #{record.incomeTax,jdbcType=INTEGER},
      </if>
      <if test="record.livingTax != null">
        living_tax = #{record.livingTax,jdbcType=INTEGER},
      </if>
      <if test="record.travelFund != null">
        travel_fund = #{record.travelFund,jdbcType=INTEGER},
      </if>
      <if test="record.repaymentBorrowings != null">
        repayment_borrowings = #{record.repaymentBorrowings,jdbcType=INTEGER},
      </if>
      <if test="record.yearendDeduction != null">
        yearend_deduction = #{record.yearendDeduction,jdbcType=INTEGER},
      </if>
      <if test="record.rentDeduction != null">
        rent_deduction = #{record.rentDeduction,jdbcType=INTEGER},
      </if>
      <if test="record.otherDeduction != null">
        other_deduction = #{record.otherDeduction,jdbcType=INTEGER},
      </if>
      <if test="record.totalDeductibleAmount != null">
        total_deductible_amount = #{record.totalDeductibleAmount,jdbcType=INTEGER},
      </if>
      <if test="record.subscriptionAmount != null">
        subscription_amount = #{record.subscriptionAmount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update public.t_salary_detail
    set employee_id = #{record.employeeId,jdbcType=INTEGER},
      comp_id = #{record.compId,jdbcType=INTEGER},
      salary_year_month = #{record.salaryYearMonth,jdbcType=CHAR},
      pay_date = #{record.payDate,jdbcType=DATE},
      basic_salary = #{record.basicSalary,jdbcType=INTEGER},
      position_allowance = #{record.positionAllowance,jdbcType=INTEGER},
      qualification_allowance = #{record.qualificationAllowance,jdbcType=INTEGER},
      house_allowance = #{record.houseAllowance,jdbcType=INTEGER},
      family_allowance = #{record.familyAllowance,jdbcType=INTEGER},
      other_allowance = #{record.otherAllowance,jdbcType=INTEGER},
      transport_fee = #{record.transportFee,jdbcType=INTEGER},
      total_pay = #{record.totalPay,jdbcType=INTEGER},
      health_insurance = #{record.healthInsurance,jdbcType=INTEGER},
      welfare_insurance = #{record.welfareInsurance,jdbcType=INTEGER},
      employ_insurance = #{record.employInsurance,jdbcType=INTEGER},
      total_insurance = #{record.totalInsurance,jdbcType=INTEGER},
      income_tax = #{record.incomeTax,jdbcType=INTEGER},
      living_tax = #{record.livingTax,jdbcType=INTEGER},
      travel_fund = #{record.travelFund,jdbcType=INTEGER},
      repayment_borrowings = #{record.repaymentBorrowings,jdbcType=INTEGER},
      yearend_deduction = #{record.yearendDeduction,jdbcType=INTEGER},
      rent_deduction = #{record.rentDeduction,jdbcType=INTEGER},
      other_deduction = #{record.otherDeduction,jdbcType=INTEGER},
      total_deductible_amount = #{record.totalDeductibleAmount,jdbcType=INTEGER},
      subscription_amount = #{record.subscriptionAmount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="jp.co.aliber.accsystem.entity.auto.TSalaryDetail">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update public.t_salary_detail
    <set>
      <if test="payDate != null">
        pay_date = #{payDate,jdbcType=DATE},
      </if>
      <if test="basicSalary != null">
        basic_salary = #{basicSalary,jdbcType=INTEGER},
      </if>
      <if test="positionAllowance != null">
        position_allowance = #{positionAllowance,jdbcType=INTEGER},
      </if>
      <if test="qualificationAllowance != null">
        qualification_allowance = #{qualificationAllowance,jdbcType=INTEGER},
      </if>
      <if test="houseAllowance != null">
        house_allowance = #{houseAllowance,jdbcType=INTEGER},
      </if>
      <if test="familyAllowance != null">
        family_allowance = #{familyAllowance,jdbcType=INTEGER},
      </if>
      <if test="otherAllowance != null">
        other_allowance = #{otherAllowance,jdbcType=INTEGER},
      </if>
      <if test="transportFee != null">
        transport_fee = #{transportFee,jdbcType=INTEGER},
      </if>
      <if test="totalPay != null">
        total_pay = #{totalPay,jdbcType=INTEGER},
      </if>
      <if test="healthInsurance != null">
        health_insurance = #{healthInsurance,jdbcType=INTEGER},
      </if>
      <if test="welfareInsurance != null">
        welfare_insurance = #{welfareInsurance,jdbcType=INTEGER},
      </if>
      <if test="employInsurance != null">
        employ_insurance = #{employInsurance,jdbcType=INTEGER},
      </if>
      <if test="totalInsurance != null">
        total_insurance = #{totalInsurance,jdbcType=INTEGER},
      </if>
      <if test="incomeTax != null">
        income_tax = #{incomeTax,jdbcType=INTEGER},
      </if>
      <if test="livingTax != null">
        living_tax = #{livingTax,jdbcType=INTEGER},
      </if>
      <if test="travelFund != null">
        travel_fund = #{travelFund,jdbcType=INTEGER},
      </if>
      <if test="repaymentBorrowings != null">
        repayment_borrowings = #{repaymentBorrowings,jdbcType=INTEGER},
      </if>
      <if test="yearendDeduction != null">
        yearend_deduction = #{yearendDeduction,jdbcType=INTEGER},
      </if>
      <if test="rentDeduction != null">
        rent_deduction = #{rentDeduction,jdbcType=INTEGER},
      </if>
      <if test="otherDeduction != null">
        other_deduction = #{otherDeduction,jdbcType=INTEGER},
      </if>
      <if test="totalDeductibleAmount != null">
        total_deductible_amount = #{totalDeductibleAmount,jdbcType=INTEGER},
      </if>
      <if test="subscriptionAmount != null">
        subscription_amount = #{subscriptionAmount,jdbcType=INTEGER},
      </if>
    </set>
    where employee_id = #{employeeId,jdbcType=INTEGER}
      and comp_id = #{compId,jdbcType=INTEGER}
      and salary_year_month = #{salaryYearMonth,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="jp.co.aliber.accsystem.entity.auto.TSalaryDetail">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update public.t_salary_detail
    set pay_date = #{payDate,jdbcType=DATE},
      basic_salary = #{basicSalary,jdbcType=INTEGER},
      position_allowance = #{positionAllowance,jdbcType=INTEGER},
      qualification_allowance = #{qualificationAllowance,jdbcType=INTEGER},
      house_allowance = #{houseAllowance,jdbcType=INTEGER},
      family_allowance = #{familyAllowance,jdbcType=INTEGER},
      other_allowance = #{otherAllowance,jdbcType=INTEGER},
      transport_fee = #{transportFee,jdbcType=INTEGER},
      total_pay = #{totalPay,jdbcType=INTEGER},
      health_insurance = #{healthInsurance,jdbcType=INTEGER},
      welfare_insurance = #{welfareInsurance,jdbcType=INTEGER},
      employ_insurance = #{employInsurance,jdbcType=INTEGER},
      total_insurance = #{totalInsurance,jdbcType=INTEGER},
      income_tax = #{incomeTax,jdbcType=INTEGER},
      living_tax = #{livingTax,jdbcType=INTEGER},
      travel_fund = #{travelFund,jdbcType=INTEGER},
      repayment_borrowings = #{repaymentBorrowings,jdbcType=INTEGER},
      yearend_deduction = #{yearendDeduction,jdbcType=INTEGER},
      rent_deduction = #{rentDeduction,jdbcType=INTEGER},
      other_deduction = #{otherDeduction,jdbcType=INTEGER},
      total_deductible_amount = #{totalDeductibleAmount,jdbcType=INTEGER},
      subscription_amount = #{subscriptionAmount,jdbcType=INTEGER}
    where employee_id = #{employeeId,jdbcType=INTEGER}
      and comp_id = #{compId,jdbcType=INTEGER}
      and salary_year_month = #{salaryYearMonth,jdbcType=CHAR}
  </update>
</mapper>