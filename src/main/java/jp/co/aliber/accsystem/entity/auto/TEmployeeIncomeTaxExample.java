package jp.co.aliber.accsystem.entity.auto;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TEmployeeIncomeTaxExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.t_employee_income_tax
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.t_employee_income_tax
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.t_employee_income_tax
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.t_employee_income_tax
     *
     * @mbg.generated
     */
    public TEmployeeIncomeTaxExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.t_employee_income_tax
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.t_employee_income_tax
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.t_employee_income_tax
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.t_employee_income_tax
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.t_employee_income_tax
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.t_employee_income_tax
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.t_employee_income_tax
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.t_employee_income_tax
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.t_employee_income_tax
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.t_employee_income_tax
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.t_employee_income_tax
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andEmployeeIdIsNull() {
            addCriterion("employee_id is null");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdIsNotNull() {
            addCriterion("employee_id is not null");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdEqualTo(Integer value) {
            addCriterion("employee_id =", value, "employeeId");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdNotEqualTo(Integer value) {
            addCriterion("employee_id <>", value, "employeeId");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdGreaterThan(Integer value) {
            addCriterion("employee_id >", value, "employeeId");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("employee_id >=", value, "employeeId");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdLessThan(Integer value) {
            addCriterion("employee_id <", value, "employeeId");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdLessThanOrEqualTo(Integer value) {
            addCriterion("employee_id <=", value, "employeeId");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdIn(List<Integer> values) {
            addCriterion("employee_id in", values, "employeeId");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdNotIn(List<Integer> values) {
            addCriterion("employee_id not in", values, "employeeId");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdBetween(Integer value1, Integer value2) {
            addCriterion("employee_id between", value1, value2, "employeeId");
            return (Criteria) this;
        }

        public Criteria andEmployeeIdNotBetween(Integer value1, Integer value2) {
            addCriterion("employee_id not between", value1, value2, "employeeId");
            return (Criteria) this;
        }

        public Criteria andCompIdIsNull() {
            addCriterion("comp_id is null");
            return (Criteria) this;
        }

        public Criteria andCompIdIsNotNull() {
            addCriterion("comp_id is not null");
            return (Criteria) this;
        }

        public Criteria andCompIdEqualTo(Integer value) {
            addCriterion("comp_id =", value, "compId");
            return (Criteria) this;
        }

        public Criteria andCompIdNotEqualTo(Integer value) {
            addCriterion("comp_id <>", value, "compId");
            return (Criteria) this;
        }

        public Criteria andCompIdGreaterThan(Integer value) {
            addCriterion("comp_id >", value, "compId");
            return (Criteria) this;
        }

        public Criteria andCompIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("comp_id >=", value, "compId");
            return (Criteria) this;
        }

        public Criteria andCompIdLessThan(Integer value) {
            addCriterion("comp_id <", value, "compId");
            return (Criteria) this;
        }

        public Criteria andCompIdLessThanOrEqualTo(Integer value) {
            addCriterion("comp_id <=", value, "compId");
            return (Criteria) this;
        }

        public Criteria andCompIdIn(List<Integer> values) {
            addCriterion("comp_id in", values, "compId");
            return (Criteria) this;
        }

        public Criteria andCompIdNotIn(List<Integer> values) {
            addCriterion("comp_id not in", values, "compId");
            return (Criteria) this;
        }

        public Criteria andCompIdBetween(Integer value1, Integer value2) {
            addCriterion("comp_id between", value1, value2, "compId");
            return (Criteria) this;
        }

        public Criteria andCompIdNotBetween(Integer value1, Integer value2) {
            addCriterion("comp_id not between", value1, value2, "compId");
            return (Criteria) this;
        }

        public Criteria andIncomeTaxTypeIsNull() {
            addCriterion("income_tax_type is null");
            return (Criteria) this;
        }

        public Criteria andIncomeTaxTypeIsNotNull() {
            addCriterion("income_tax_type is not null");
            return (Criteria) this;
        }

        public Criteria andIncomeTaxTypeEqualTo(Integer value) {
            addCriterion("income_tax_type =", value, "incomeTaxType");
            return (Criteria) this;
        }

        public Criteria andIncomeTaxTypeNotEqualTo(Integer value) {
            addCriterion("income_tax_type <>", value, "incomeTaxType");
            return (Criteria) this;
        }

        public Criteria andIncomeTaxTypeGreaterThan(Integer value) {
            addCriterion("income_tax_type >", value, "incomeTaxType");
            return (Criteria) this;
        }

        public Criteria andIncomeTaxTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("income_tax_type >=", value, "incomeTaxType");
            return (Criteria) this;
        }

        public Criteria andIncomeTaxTypeLessThan(Integer value) {
            addCriterion("income_tax_type <", value, "incomeTaxType");
            return (Criteria) this;
        }

        public Criteria andIncomeTaxTypeLessThanOrEqualTo(Integer value) {
            addCriterion("income_tax_type <=", value, "incomeTaxType");
            return (Criteria) this;
        }

        public Criteria andIncomeTaxTypeIn(List<Integer> values) {
            addCriterion("income_tax_type in", values, "incomeTaxType");
            return (Criteria) this;
        }

        public Criteria andIncomeTaxTypeNotIn(List<Integer> values) {
            addCriterion("income_tax_type not in", values, "incomeTaxType");
            return (Criteria) this;
        }

        public Criteria andIncomeTaxTypeBetween(Integer value1, Integer value2) {
            addCriterion("income_tax_type between", value1, value2, "incomeTaxType");
            return (Criteria) this;
        }

        public Criteria andIncomeTaxTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("income_tax_type not between", value1, value2, "incomeTaxType");
            return (Criteria) this;
        }

        public Criteria andDeductibleSpouseIsNull() {
            addCriterion("deductible_spouse is null");
            return (Criteria) this;
        }

        public Criteria andDeductibleSpouseIsNotNull() {
            addCriterion("deductible_spouse is not null");
            return (Criteria) this;
        }

        public Criteria andDeductibleSpouseEqualTo(Boolean value) {
            addCriterion("deductible_spouse =", value, "deductibleSpouse");
            return (Criteria) this;
        }

        public Criteria andDeductibleSpouseNotEqualTo(Boolean value) {
            addCriterion("deductible_spouse <>", value, "deductibleSpouse");
            return (Criteria) this;
        }

        public Criteria andDeductibleSpouseGreaterThan(Boolean value) {
            addCriterion("deductible_spouse >", value, "deductibleSpouse");
            return (Criteria) this;
        }

        public Criteria andDeductibleSpouseGreaterThanOrEqualTo(Boolean value) {
            addCriterion("deductible_spouse >=", value, "deductibleSpouse");
            return (Criteria) this;
        }

        public Criteria andDeductibleSpouseLessThan(Boolean value) {
            addCriterion("deductible_spouse <", value, "deductibleSpouse");
            return (Criteria) this;
        }

        public Criteria andDeductibleSpouseLessThanOrEqualTo(Boolean value) {
            addCriterion("deductible_spouse <=", value, "deductibleSpouse");
            return (Criteria) this;
        }

        public Criteria andDeductibleSpouseIn(List<Boolean> values) {
            addCriterion("deductible_spouse in", values, "deductibleSpouse");
            return (Criteria) this;
        }

        public Criteria andDeductibleSpouseNotIn(List<Boolean> values) {
            addCriterion("deductible_spouse not in", values, "deductibleSpouse");
            return (Criteria) this;
        }

        public Criteria andDeductibleSpouseBetween(Boolean value1, Boolean value2) {
            addCriterion("deductible_spouse between", value1, value2, "deductibleSpouse");
            return (Criteria) this;
        }

        public Criteria andDeductibleSpouseNotBetween(Boolean value1, Boolean value2) {
            addCriterion("deductible_spouse not between", value1, value2, "deductibleSpouse");
            return (Criteria) this;
        }

        public Criteria andDependencyDeductionDeclarationIsNull() {
            addCriterion("dependency_deduction_declaration is null");
            return (Criteria) this;
        }

        public Criteria andDependencyDeductionDeclarationIsNotNull() {
            addCriterion("dependency_deduction_declaration is not null");
            return (Criteria) this;
        }

        public Criteria andDependencyDeductionDeclarationEqualTo(Boolean value) {
            addCriterion("dependency_deduction_declaration =", value, "dependencyDeductionDeclaration");
            return (Criteria) this;
        }

        public Criteria andDependencyDeductionDeclarationNotEqualTo(Boolean value) {
            addCriterion("dependency_deduction_declaration <>", value, "dependencyDeductionDeclaration");
            return (Criteria) this;
        }

        public Criteria andDependencyDeductionDeclarationGreaterThan(Boolean value) {
            addCriterion("dependency_deduction_declaration >", value, "dependencyDeductionDeclaration");
            return (Criteria) this;
        }

        public Criteria andDependencyDeductionDeclarationGreaterThanOrEqualTo(Boolean value) {
            addCriterion("dependency_deduction_declaration >=", value, "dependencyDeductionDeclaration");
            return (Criteria) this;
        }

        public Criteria andDependencyDeductionDeclarationLessThan(Boolean value) {
            addCriterion("dependency_deduction_declaration <", value, "dependencyDeductionDeclaration");
            return (Criteria) this;
        }

        public Criteria andDependencyDeductionDeclarationLessThanOrEqualTo(Boolean value) {
            addCriterion("dependency_deduction_declaration <=", value, "dependencyDeductionDeclaration");
            return (Criteria) this;
        }

        public Criteria andDependencyDeductionDeclarationIn(List<Boolean> values) {
            addCriterion("dependency_deduction_declaration in", values, "dependencyDeductionDeclaration");
            return (Criteria) this;
        }

        public Criteria andDependencyDeductionDeclarationNotIn(List<Boolean> values) {
            addCriterion("dependency_deduction_declaration not in", values, "dependencyDeductionDeclaration");
            return (Criteria) this;
        }

        public Criteria andDependencyDeductionDeclarationBetween(Boolean value1, Boolean value2) {
            addCriterion("dependency_deduction_declaration between", value1, value2, "dependencyDeductionDeclaration");
            return (Criteria) this;
        }

        public Criteria andDependencyDeductionDeclarationNotBetween(Boolean value1, Boolean value2) {
            addCriterion("dependency_deduction_declaration not between", value1, value2, "dependencyDeductionDeclaration");
            return (Criteria) this;
        }

        public Criteria andDependencyCountIsNull() {
            addCriterion("dependency_count is null");
            return (Criteria) this;
        }

        public Criteria andDependencyCountIsNotNull() {
            addCriterion("dependency_count is not null");
            return (Criteria) this;
        }

        public Criteria andDependencyCountEqualTo(Integer value) {
            addCriterion("dependency_count =", value, "dependencyCount");
            return (Criteria) this;
        }

        public Criteria andDependencyCountNotEqualTo(Integer value) {
            addCriterion("dependency_count <>", value, "dependencyCount");
            return (Criteria) this;
        }

        public Criteria andDependencyCountGreaterThan(Integer value) {
            addCriterion("dependency_count >", value, "dependencyCount");
            return (Criteria) this;
        }

        public Criteria andDependencyCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("dependency_count >=", value, "dependencyCount");
            return (Criteria) this;
        }

        public Criteria andDependencyCountLessThan(Integer value) {
            addCriterion("dependency_count <", value, "dependencyCount");
            return (Criteria) this;
        }

        public Criteria andDependencyCountLessThanOrEqualTo(Integer value) {
            addCriterion("dependency_count <=", value, "dependencyCount");
            return (Criteria) this;
        }

        public Criteria andDependencyCountIn(List<Integer> values) {
            addCriterion("dependency_count in", values, "dependencyCount");
            return (Criteria) this;
        }

        public Criteria andDependencyCountNotIn(List<Integer> values) {
            addCriterion("dependency_count not in", values, "dependencyCount");
            return (Criteria) this;
        }

        public Criteria andDependencyCountBetween(Integer value1, Integer value2) {
            addCriterion("dependency_count between", value1, value2, "dependencyCount");
            return (Criteria) this;
        }

        public Criteria andDependencyCountNotBetween(Integer value1, Integer value2) {
            addCriterion("dependency_count not between", value1, value2, "dependencyCount");
            return (Criteria) this;
        }

        public Criteria andHeadHouseholdNameIsNull() {
            addCriterion("head_household_name is null");
            return (Criteria) this;
        }

        public Criteria andHeadHouseholdNameIsNotNull() {
            addCriterion("head_household_name is not null");
            return (Criteria) this;
        }

        public Criteria andHeadHouseholdNameEqualTo(String value) {
            addCriterion("head_household_name =", value, "headHouseholdName");
            return (Criteria) this;
        }

        public Criteria andHeadHouseholdNameNotEqualTo(String value) {
            addCriterion("head_household_name <>", value, "headHouseholdName");
            return (Criteria) this;
        }

        public Criteria andHeadHouseholdNameGreaterThan(String value) {
            addCriterion("head_household_name >", value, "headHouseholdName");
            return (Criteria) this;
        }

        public Criteria andHeadHouseholdNameGreaterThanOrEqualTo(String value) {
            addCriterion("head_household_name >=", value, "headHouseholdName");
            return (Criteria) this;
        }

        public Criteria andHeadHouseholdNameLessThan(String value) {
            addCriterion("head_household_name <", value, "headHouseholdName");
            return (Criteria) this;
        }

        public Criteria andHeadHouseholdNameLessThanOrEqualTo(String value) {
            addCriterion("head_household_name <=", value, "headHouseholdName");
            return (Criteria) this;
        }

        public Criteria andHeadHouseholdNameLike(String value) {
            addCriterion("head_household_name like", value, "headHouseholdName");
            return (Criteria) this;
        }

        public Criteria andHeadHouseholdNameNotLike(String value) {
            addCriterion("head_household_name not like", value, "headHouseholdName");
            return (Criteria) this;
        }

        public Criteria andHeadHouseholdNameIn(List<String> values) {
            addCriterion("head_household_name in", values, "headHouseholdName");
            return (Criteria) this;
        }

        public Criteria andHeadHouseholdNameNotIn(List<String> values) {
            addCriterion("head_household_name not in", values, "headHouseholdName");
            return (Criteria) this;
        }

        public Criteria andHeadHouseholdNameBetween(String value1, String value2) {
            addCriterion("head_household_name between", value1, value2, "headHouseholdName");
            return (Criteria) this;
        }

        public Criteria andHeadHouseholdNameNotBetween(String value1, String value2) {
            addCriterion("head_household_name not between", value1, value2, "headHouseholdName");
            return (Criteria) this;
        }

        public Criteria andRelationshipIsNull() {
            addCriterion("relationship is null");
            return (Criteria) this;
        }

        public Criteria andRelationshipIsNotNull() {
            addCriterion("relationship is not null");
            return (Criteria) this;
        }

        public Criteria andRelationshipEqualTo(String value) {
            addCriterion("relationship =", value, "relationship");
            return (Criteria) this;
        }

        public Criteria andRelationshipNotEqualTo(String value) {
            addCriterion("relationship <>", value, "relationship");
            return (Criteria) this;
        }

        public Criteria andRelationshipGreaterThan(String value) {
            addCriterion("relationship >", value, "relationship");
            return (Criteria) this;
        }

        public Criteria andRelationshipGreaterThanOrEqualTo(String value) {
            addCriterion("relationship >=", value, "relationship");
            return (Criteria) this;
        }

        public Criteria andRelationshipLessThan(String value) {
            addCriterion("relationship <", value, "relationship");
            return (Criteria) this;
        }

        public Criteria andRelationshipLessThanOrEqualTo(String value) {
            addCriterion("relationship <=", value, "relationship");
            return (Criteria) this;
        }

        public Criteria andRelationshipLike(String value) {
            addCriterion("relationship like", value, "relationship");
            return (Criteria) this;
        }

        public Criteria andRelationshipNotLike(String value) {
            addCriterion("relationship not like", value, "relationship");
            return (Criteria) this;
        }

        public Criteria andRelationshipIn(List<String> values) {
            addCriterion("relationship in", values, "relationship");
            return (Criteria) this;
        }

        public Criteria andRelationshipNotIn(List<String> values) {
            addCriterion("relationship not in", values, "relationship");
            return (Criteria) this;
        }

        public Criteria andRelationshipBetween(String value1, String value2) {
            addCriterion("relationship between", value1, value2, "relationship");
            return (Criteria) this;
        }

        public Criteria andRelationshipNotBetween(String value1, String value2) {
            addCriterion("relationship not between", value1, value2, "relationship");
            return (Criteria) this;
        }

        public Criteria andTreatyExceptionIsNull() {
            addCriterion("treaty_exception is null");
            return (Criteria) this;
        }

        public Criteria andTreatyExceptionIsNotNull() {
            addCriterion("treaty_exception is not null");
            return (Criteria) this;
        }

        public Criteria andTreatyExceptionEqualTo(Boolean value) {
            addCriterion("treaty_exception =", value, "treatyException");
            return (Criteria) this;
        }

        public Criteria andTreatyExceptionNotEqualTo(Boolean value) {
            addCriterion("treaty_exception <>", value, "treatyException");
            return (Criteria) this;
        }

        public Criteria andTreatyExceptionGreaterThan(Boolean value) {
            addCriterion("treaty_exception >", value, "treatyException");
            return (Criteria) this;
        }

        public Criteria andTreatyExceptionGreaterThanOrEqualTo(Boolean value) {
            addCriterion("treaty_exception >=", value, "treatyException");
            return (Criteria) this;
        }

        public Criteria andTreatyExceptionLessThan(Boolean value) {
            addCriterion("treaty_exception <", value, "treatyException");
            return (Criteria) this;
        }

        public Criteria andTreatyExceptionLessThanOrEqualTo(Boolean value) {
            addCriterion("treaty_exception <=", value, "treatyException");
            return (Criteria) this;
        }

        public Criteria andTreatyExceptionIn(List<Boolean> values) {
            addCriterion("treaty_exception in", values, "treatyException");
            return (Criteria) this;
        }

        public Criteria andTreatyExceptionNotIn(List<Boolean> values) {
            addCriterion("treaty_exception not in", values, "treatyException");
            return (Criteria) this;
        }

        public Criteria andTreatyExceptionBetween(Boolean value1, Boolean value2) {
            addCriterion("treaty_exception between", value1, value2, "treatyException");
            return (Criteria) this;
        }

        public Criteria andTreatyExceptionNotBetween(Boolean value1, Boolean value2) {
            addCriterion("treaty_exception not between", value1, value2, "treatyException");
            return (Criteria) this;
        }

        public Criteria andBlueOfficerIsNull() {
            addCriterion("blue_officer is null");
            return (Criteria) this;
        }

        public Criteria andBlueOfficerIsNotNull() {
            addCriterion("blue_officer is not null");
            return (Criteria) this;
        }

        public Criteria andBlueOfficerEqualTo(Boolean value) {
            addCriterion("blue_officer =", value, "blueOfficer");
            return (Criteria) this;
        }

        public Criteria andBlueOfficerNotEqualTo(Boolean value) {
            addCriterion("blue_officer <>", value, "blueOfficer");
            return (Criteria) this;
        }

        public Criteria andBlueOfficerGreaterThan(Boolean value) {
            addCriterion("blue_officer >", value, "blueOfficer");
            return (Criteria) this;
        }

        public Criteria andBlueOfficerGreaterThanOrEqualTo(Boolean value) {
            addCriterion("blue_officer >=", value, "blueOfficer");
            return (Criteria) this;
        }

        public Criteria andBlueOfficerLessThan(Boolean value) {
            addCriterion("blue_officer <", value, "blueOfficer");
            return (Criteria) this;
        }

        public Criteria andBlueOfficerLessThanOrEqualTo(Boolean value) {
            addCriterion("blue_officer <=", value, "blueOfficer");
            return (Criteria) this;
        }

        public Criteria andBlueOfficerIn(List<Boolean> values) {
            addCriterion("blue_officer in", values, "blueOfficer");
            return (Criteria) this;
        }

        public Criteria andBlueOfficerNotIn(List<Boolean> values) {
            addCriterion("blue_officer not in", values, "blueOfficer");
            return (Criteria) this;
        }

        public Criteria andBlueOfficerBetween(Boolean value1, Boolean value2) {
            addCriterion("blue_officer between", value1, value2, "blueOfficer");
            return (Criteria) this;
        }

        public Criteria andBlueOfficerNotBetween(Boolean value1, Boolean value2) {
            addCriterion("blue_officer not between", value1, value2, "blueOfficer");
            return (Criteria) this;
        }

        public Criteria andDeleteFlgIsNull() {
            addCriterion("delete_flg is null");
            return (Criteria) this;
        }

        public Criteria andDeleteFlgIsNotNull() {
            addCriterion("delete_flg is not null");
            return (Criteria) this;
        }

        public Criteria andDeleteFlgEqualTo(Boolean value) {
            addCriterion("delete_flg =", value, "deleteFlg");
            return (Criteria) this;
        }

        public Criteria andDeleteFlgNotEqualTo(Boolean value) {
            addCriterion("delete_flg <>", value, "deleteFlg");
            return (Criteria) this;
        }

        public Criteria andDeleteFlgGreaterThan(Boolean value) {
            addCriterion("delete_flg >", value, "deleteFlg");
            return (Criteria) this;
        }

        public Criteria andDeleteFlgGreaterThanOrEqualTo(Boolean value) {
            addCriterion("delete_flg >=", value, "deleteFlg");
            return (Criteria) this;
        }

        public Criteria andDeleteFlgLessThan(Boolean value) {
            addCriterion("delete_flg <", value, "deleteFlg");
            return (Criteria) this;
        }

        public Criteria andDeleteFlgLessThanOrEqualTo(Boolean value) {
            addCriterion("delete_flg <=", value, "deleteFlg");
            return (Criteria) this;
        }

        public Criteria andDeleteFlgIn(List<Boolean> values) {
            addCriterion("delete_flg in", values, "deleteFlg");
            return (Criteria) this;
        }

        public Criteria andDeleteFlgNotIn(List<Boolean> values) {
            addCriterion("delete_flg not in", values, "deleteFlg");
            return (Criteria) this;
        }

        public Criteria andDeleteFlgBetween(Boolean value1, Boolean value2) {
            addCriterion("delete_flg between", value1, value2, "deleteFlg");
            return (Criteria) this;
        }

        public Criteria andDeleteFlgNotBetween(Boolean value1, Boolean value2) {
            addCriterion("delete_flg not between", value1, value2, "deleteFlg");
            return (Criteria) this;
        }

        public Criteria andRegistDateIsNull() {
            addCriterion("regist_date is null");
            return (Criteria) this;
        }

        public Criteria andRegistDateIsNotNull() {
            addCriterion("regist_date is not null");
            return (Criteria) this;
        }

        public Criteria andRegistDateEqualTo(Date value) {
            addCriterion("regist_date =", value, "registDate");
            return (Criteria) this;
        }

        public Criteria andRegistDateNotEqualTo(Date value) {
            addCriterion("regist_date <>", value, "registDate");
            return (Criteria) this;
        }

        public Criteria andRegistDateGreaterThan(Date value) {
            addCriterion("regist_date >", value, "registDate");
            return (Criteria) this;
        }

        public Criteria andRegistDateGreaterThanOrEqualTo(Date value) {
            addCriterion("regist_date >=", value, "registDate");
            return (Criteria) this;
        }

        public Criteria andRegistDateLessThan(Date value) {
            addCriterion("regist_date <", value, "registDate");
            return (Criteria) this;
        }

        public Criteria andRegistDateLessThanOrEqualTo(Date value) {
            addCriterion("regist_date <=", value, "registDate");
            return (Criteria) this;
        }

        public Criteria andRegistDateIn(List<Date> values) {
            addCriterion("regist_date in", values, "registDate");
            return (Criteria) this;
        }

        public Criteria andRegistDateNotIn(List<Date> values) {
            addCriterion("regist_date not in", values, "registDate");
            return (Criteria) this;
        }

        public Criteria andRegistDateBetween(Date value1, Date value2) {
            addCriterion("regist_date between", value1, value2, "registDate");
            return (Criteria) this;
        }

        public Criteria andRegistDateNotBetween(Date value1, Date value2) {
            addCriterion("regist_date not between", value1, value2, "registDate");
            return (Criteria) this;
        }

        public Criteria andRegistIdIsNull() {
            addCriterion("regist_id is null");
            return (Criteria) this;
        }

        public Criteria andRegistIdIsNotNull() {
            addCriterion("regist_id is not null");
            return (Criteria) this;
        }

        public Criteria andRegistIdEqualTo(Integer value) {
            addCriterion("regist_id =", value, "registId");
            return (Criteria) this;
        }

        public Criteria andRegistIdNotEqualTo(Integer value) {
            addCriterion("regist_id <>", value, "registId");
            return (Criteria) this;
        }

        public Criteria andRegistIdGreaterThan(Integer value) {
            addCriterion("regist_id >", value, "registId");
            return (Criteria) this;
        }

        public Criteria andRegistIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("regist_id >=", value, "registId");
            return (Criteria) this;
        }

        public Criteria andRegistIdLessThan(Integer value) {
            addCriterion("regist_id <", value, "registId");
            return (Criteria) this;
        }

        public Criteria andRegistIdLessThanOrEqualTo(Integer value) {
            addCriterion("regist_id <=", value, "registId");
            return (Criteria) this;
        }

        public Criteria andRegistIdIn(List<Integer> values) {
            addCriterion("regist_id in", values, "registId");
            return (Criteria) this;
        }

        public Criteria andRegistIdNotIn(List<Integer> values) {
            addCriterion("regist_id not in", values, "registId");
            return (Criteria) this;
        }

        public Criteria andRegistIdBetween(Integer value1, Integer value2) {
            addCriterion("regist_id between", value1, value2, "registId");
            return (Criteria) this;
        }

        public Criteria andRegistIdNotBetween(Integer value1, Integer value2) {
            addCriterion("regist_id not between", value1, value2, "registId");
            return (Criteria) this;
        }

        public Criteria andUpdateDateIsNull() {
            addCriterion("update_date is null");
            return (Criteria) this;
        }

        public Criteria andUpdateDateIsNotNull() {
            addCriterion("update_date is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateDateEqualTo(Date value) {
            addCriterion("update_date =", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateNotEqualTo(Date value) {
            addCriterion("update_date <>", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateGreaterThan(Date value) {
            addCriterion("update_date >", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateGreaterThanOrEqualTo(Date value) {
            addCriterion("update_date >=", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateLessThan(Date value) {
            addCriterion("update_date <", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateLessThanOrEqualTo(Date value) {
            addCriterion("update_date <=", value, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateIn(List<Date> values) {
            addCriterion("update_date in", values, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateNotIn(List<Date> values) {
            addCriterion("update_date not in", values, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateBetween(Date value1, Date value2) {
            addCriterion("update_date between", value1, value2, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateDateNotBetween(Date value1, Date value2) {
            addCriterion("update_date not between", value1, value2, "updateDate");
            return (Criteria) this;
        }

        public Criteria andUpdateIdIsNull() {
            addCriterion("update_id is null");
            return (Criteria) this;
        }

        public Criteria andUpdateIdIsNotNull() {
            addCriterion("update_id is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateIdEqualTo(Integer value) {
            addCriterion("update_id =", value, "updateId");
            return (Criteria) this;
        }

        public Criteria andUpdateIdNotEqualTo(Integer value) {
            addCriterion("update_id <>", value, "updateId");
            return (Criteria) this;
        }

        public Criteria andUpdateIdGreaterThan(Integer value) {
            addCriterion("update_id >", value, "updateId");
            return (Criteria) this;
        }

        public Criteria andUpdateIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("update_id >=", value, "updateId");
            return (Criteria) this;
        }

        public Criteria andUpdateIdLessThan(Integer value) {
            addCriterion("update_id <", value, "updateId");
            return (Criteria) this;
        }

        public Criteria andUpdateIdLessThanOrEqualTo(Integer value) {
            addCriterion("update_id <=", value, "updateId");
            return (Criteria) this;
        }

        public Criteria andUpdateIdIn(List<Integer> values) {
            addCriterion("update_id in", values, "updateId");
            return (Criteria) this;
        }

        public Criteria andUpdateIdNotIn(List<Integer> values) {
            addCriterion("update_id not in", values, "updateId");
            return (Criteria) this;
        }

        public Criteria andUpdateIdBetween(Integer value1, Integer value2) {
            addCriterion("update_id between", value1, value2, "updateId");
            return (Criteria) this;
        }

        public Criteria andUpdateIdNotBetween(Integer value1, Integer value2) {
            addCriterion("update_id not between", value1, value2, "updateId");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.t_employee_income_tax
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.t_employee_income_tax
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}