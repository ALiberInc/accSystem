package jp.co.aliber.accsystem.entity.auto;

import java.util.ArrayList;
import java.util.List;

public class PayDetailsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.pay_details
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.pay_details
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table public.pay_details
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.pay_details
     *
     * @mbg.generated
     */
    public PayDetailsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.pay_details
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.pay_details
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.pay_details
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.pay_details
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.pay_details
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.pay_details
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.pay_details
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.pay_details
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.pay_details
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table public.pay_details
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.pay_details
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andPayDetailsIdIsNull() {
            addCriterion("pay_details_id is null");
            return (Criteria) this;
        }

        public Criteria andPayDetailsIdIsNotNull() {
            addCriterion("pay_details_id is not null");
            return (Criteria) this;
        }

        public Criteria andPayDetailsIdEqualTo(Long value) {
            addCriterion("pay_details_id =", value, "payDetailsId");
            return (Criteria) this;
        }

        public Criteria andPayDetailsIdNotEqualTo(Long value) {
            addCriterion("pay_details_id <>", value, "payDetailsId");
            return (Criteria) this;
        }

        public Criteria andPayDetailsIdGreaterThan(Long value) {
            addCriterion("pay_details_id >", value, "payDetailsId");
            return (Criteria) this;
        }

        public Criteria andPayDetailsIdGreaterThanOrEqualTo(Long value) {
            addCriterion("pay_details_id >=", value, "payDetailsId");
            return (Criteria) this;
        }

        public Criteria andPayDetailsIdLessThan(Long value) {
            addCriterion("pay_details_id <", value, "payDetailsId");
            return (Criteria) this;
        }

        public Criteria andPayDetailsIdLessThanOrEqualTo(Long value) {
            addCriterion("pay_details_id <=", value, "payDetailsId");
            return (Criteria) this;
        }

        public Criteria andPayDetailsIdIn(List<Long> values) {
            addCriterion("pay_details_id in", values, "payDetailsId");
            return (Criteria) this;
        }

        public Criteria andPayDetailsIdNotIn(List<Long> values) {
            addCriterion("pay_details_id not in", values, "payDetailsId");
            return (Criteria) this;
        }

        public Criteria andPayDetailsIdBetween(Long value1, Long value2) {
            addCriterion("pay_details_id between", value1, value2, "payDetailsId");
            return (Criteria) this;
        }

        public Criteria andPayDetailsIdNotBetween(Long value1, Long value2) {
            addCriterion("pay_details_id not between", value1, value2, "payDetailsId");
            return (Criteria) this;
        }

        public Criteria andEmployNameIsNull() {
            addCriterion("employ_name is null");
            return (Criteria) this;
        }

        public Criteria andEmployNameIsNotNull() {
            addCriterion("employ_name is not null");
            return (Criteria) this;
        }

        public Criteria andEmployNameEqualTo(String value) {
            addCriterion("employ_name =", value, "employName");
            return (Criteria) this;
        }

        public Criteria andEmployNameNotEqualTo(String value) {
            addCriterion("employ_name <>", value, "employName");
            return (Criteria) this;
        }

        public Criteria andEmployNameGreaterThan(String value) {
            addCriterion("employ_name >", value, "employName");
            return (Criteria) this;
        }

        public Criteria andEmployNameGreaterThanOrEqualTo(String value) {
            addCriterion("employ_name >=", value, "employName");
            return (Criteria) this;
        }

        public Criteria andEmployNameLessThan(String value) {
            addCriterion("employ_name <", value, "employName");
            return (Criteria) this;
        }

        public Criteria andEmployNameLessThanOrEqualTo(String value) {
            addCriterion("employ_name <=", value, "employName");
            return (Criteria) this;
        }

        public Criteria andEmployNameLike(String value) {
            addCriterion("employ_name like", value, "employName");
            return (Criteria) this;
        }

        public Criteria andEmployNameNotLike(String value) {
            addCriterion("employ_name not like", value, "employName");
            return (Criteria) this;
        }

        public Criteria andEmployNameIn(List<String> values) {
            addCriterion("employ_name in", values, "employName");
            return (Criteria) this;
        }

        public Criteria andEmployNameNotIn(List<String> values) {
            addCriterion("employ_name not in", values, "employName");
            return (Criteria) this;
        }

        public Criteria andEmployNameBetween(String value1, String value2) {
            addCriterion("employ_name between", value1, value2, "employName");
            return (Criteria) this;
        }

        public Criteria andEmployNameNotBetween(String value1, String value2) {
            addCriterion("employ_name not between", value1, value2, "employName");
            return (Criteria) this;
        }

        public Criteria andDepartmentIsNull() {
            addCriterion("department is null");
            return (Criteria) this;
        }

        public Criteria andDepartmentIsNotNull() {
            addCriterion("department is not null");
            return (Criteria) this;
        }

        public Criteria andDepartmentEqualTo(String value) {
            addCriterion("department =", value, "department");
            return (Criteria) this;
        }

        public Criteria andDepartmentNotEqualTo(String value) {
            addCriterion("department <>", value, "department");
            return (Criteria) this;
        }

        public Criteria andDepartmentGreaterThan(String value) {
            addCriterion("department >", value, "department");
            return (Criteria) this;
        }

        public Criteria andDepartmentGreaterThanOrEqualTo(String value) {
            addCriterion("department >=", value, "department");
            return (Criteria) this;
        }

        public Criteria andDepartmentLessThan(String value) {
            addCriterion("department <", value, "department");
            return (Criteria) this;
        }

        public Criteria andDepartmentLessThanOrEqualTo(String value) {
            addCriterion("department <=", value, "department");
            return (Criteria) this;
        }

        public Criteria andDepartmentLike(String value) {
            addCriterion("department like", value, "department");
            return (Criteria) this;
        }

        public Criteria andDepartmentNotLike(String value) {
            addCriterion("department not like", value, "department");
            return (Criteria) this;
        }

        public Criteria andDepartmentIn(List<String> values) {
            addCriterion("department in", values, "department");
            return (Criteria) this;
        }

        public Criteria andDepartmentNotIn(List<String> values) {
            addCriterion("department not in", values, "department");
            return (Criteria) this;
        }

        public Criteria andDepartmentBetween(String value1, String value2) {
            addCriterion("department between", value1, value2, "department");
            return (Criteria) this;
        }

        public Criteria andDepartmentNotBetween(String value1, String value2) {
            addCriterion("department not between", value1, value2, "department");
            return (Criteria) this;
        }

        public Criteria andEmailIsNull() {
            addCriterion("email is null");
            return (Criteria) this;
        }

        public Criteria andEmailIsNotNull() {
            addCriterion("email is not null");
            return (Criteria) this;
        }

        public Criteria andEmailEqualTo(String value) {
            addCriterion("email =", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotEqualTo(String value) {
            addCriterion("email <>", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailGreaterThan(String value) {
            addCriterion("email >", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailGreaterThanOrEqualTo(String value) {
            addCriterion("email >=", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailLessThan(String value) {
            addCriterion("email <", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailLessThanOrEqualTo(String value) {
            addCriterion("email <=", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailLike(String value) {
            addCriterion("email like", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotLike(String value) {
            addCriterion("email not like", value, "email");
            return (Criteria) this;
        }

        public Criteria andEmailIn(List<String> values) {
            addCriterion("email in", values, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotIn(List<String> values) {
            addCriterion("email not in", values, "email");
            return (Criteria) this;
        }

        public Criteria andEmailBetween(String value1, String value2) {
            addCriterion("email between", value1, value2, "email");
            return (Criteria) this;
        }

        public Criteria andEmailNotBetween(String value1, String value2) {
            addCriterion("email not between", value1, value2, "email");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.pay_details
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table public.pay_details
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}